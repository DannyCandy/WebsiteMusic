import { Card, CardContent, CardHeader } from "@/components/ui/card";
import { ScrollArea } from "@/components/ui/scroll-area";
import { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from "@/components/ui/tooltip";
import { Button } from "@/components/ui/button";
import { usePlayerStore } from "@/stores/usePlayerStore";
import { Link, useParams } from "react-router-dom";

const LyricsPage = () => {
  const { currentSong, setCurrentTime } = usePlayerStore();
  const { songId } = useParams(); // Get songId from the route if using /lyrics/:songId

  
  /*const lyricsData = currentSong?.lyrics
    ? currentSong.lyrics.split("\n").map((line, index) => ({
        text: line,
        time: index * 5, // Placeholder: 5 seconds per line (replace with real timestamps)
      }))
    : [];
    */
  // Function to handle clicking on a lyric line
  const handleLyricClick = (time: number) => {
    setCurrentTime(time);
  };

  // Helper function to format time
  const formatTime = (seconds: number) => {
    const minutes = Math.floor(seconds / 60);
    const remainingSeconds = Math.floor(seconds % 60);
    return `${minutes}:${remainingSeconds.toString().padStart(2, "0")}`;
  };

  if (!currentSong) {
    return (
      <div className="min-h-screen bg-maroon-900 text-white flex items-center justify-center">
        No song selected. Please go back to the player and select a song.
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-maroon-900 text-white p-4">
      <Card className="bg-maroon-800 border-none">
        <CardHeader className="text-center">
          <h2 className="text-2xl font-bold text-white">{currentSong.title} - {currentSong.artist}</h2>
          <Link to="/">
            <Button variant="outline" className="mt-2 text-white border-white hover:bg-maroon-700">
              Back to Player
            </Button>
          </Link>
        </CardHeader>
        <CardContent>
          <ScrollArea className="h-[calc(100vh-200px)]">
            <TooltipProvider>
              {lyricsData.map((lyric, index) => (
                <div key={index} className="py-2 text-center">
                  <Tooltip>
                    <TooltipTrigger asChild>
                      <span
                        className="cursor-pointer hover:underline text-lg text-white"
                        onClick={() => handleLyricClick(lyric.time)}
                      >
                        {lyric.text}
                      </span>
                    </TooltipTrigger>
                    <TooltipContent>
                      <p>{formatTime(lyric.time)}</p>
                    </TooltipContent>
                  </Tooltip>
                </div>
              ))}
            </TooltipProvider>
          </ScrollArea>
        </CardContent>
      </Card>
    </div>
  );
};

export default LyricsPage;